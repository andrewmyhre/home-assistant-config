- platform: yr
- platform: darksky
  api_key: 67ddd9c4685908120132aaa3253821f7
  forecast:
    - 1
    - 2
    - 3
    - 4
    - 5
  monitored_conditions:
    - summary
    - icon
    - temperature
    - precip_intensity
    - precip_probability
    - precip_type
    - precip_accumulation
    - temperature
    - apparent_temperature
    - wind_speed
    - wind_gust
    - minutely_summary
    - hourly_summary
    - daily_summary
    - sunrise_time
    - sunset_time
    - cloud_cover
    - alerts

- platform: template
  sensors:
    roomba_battery_level:
      value_template: >
        {{ states.vacuum.the_dog.attributes.battery_level }}
      friendly_name: Battery Level
      unit_of_measurement: '%'
      icon_template: '{{ states.vacuum.the_dog.attributes.battery_icon }}'

- platform: template
  sensors:
    roomba_current_status:
      value_template: >
        {{ states.vacuum.the_dog.attributes.status }}
      friendly_name: Status

- platform: template
  sensors:
    roomba_bin_full:
      value_template: >-
        {% if state_attr('vacuum.the_dog','bin_full') %}
        Bin is full
        {% else %}
        Bin is not full
        {% endif %}
      friendly_name: Bin full

- platform: template
  sensors:
    roomba_status:
      value_template: >
        {% if is_state('status.vacuum.the_dog.attributes.bin_full', 'true') %}
        {{ states.vacuum.the_dog.attributes.status }}

        Bin is full
        {% else %}
        {{ states.vacuum.the_dog.attributes.status }}

        Bin is not full
        {% endif %}
      icon_template: '{{ states.vacuum.the_dog.attributes.battery_icon }}'
      friendly_name_template: '{{ states.vacuum.the_dog.attributes.battery_level }}%'


- platform: template
  sensors:
    main_lights_brightness:
      friendly_name: Main lights brightness
      value_template: >
        {{ states.light.main_lights.attributes.brightness}}
      unit_of_measurement: ms

- platform: template
  sensors:
    sun_elevation:
      friendly_name: Sun elevation
      value_template: >
        {{ states.sun.sun.attributes.elevation}}
      unit_of_measurement: s

- platform: template
  sensors:
    ac_setting:
      friendly_name: AC Setting
      value_template: >-
        {% if is_state('input_select.ac_mode', "Fan") %}
          {% if is_state('input_select.ac_mode', "Auto") %}
          Fan-Medium
          {% else %} 
          Fan-{{states('input_select.ac_fan')}}
          {% endif %}
        {% elif is_state('input_select.ac_mode', "Off") %}
        Off
        {% else %}
        {{ states('input_select.ac_mode') }}-{{ states('input_select.ac_fan') }}-{{ states('input_number.ac_temp')|int }}
        {% endif %}
    ac_mode:
      friendly_name: AC Mode
      value_template: >-
        {{ states('input_select.ac_mode') }}
    ac_fan:
      friendly_name: AC Fan
      value_template: >-
        {{ states('input_select.ac_fan') }}
    ac_temp:
      friendly_name: AC Temp
      value_template: >-
        {{ states('input_number.ac_temp') }}
      unit_of_measurement: Metric
- platform: template
  sensors:
    weather_temperature:
      friendly_name: "Ambient Temperature"
      value_template: >-
        {{ state_attr('weather.knyc_daynight','temperature' )}}
    weather_humidity:
      friendly_name: "Ambient Humidity"
      value_template: >-
        {{ state_attr('weather.knyc_daynight','humidity')}}
- platform: template
  sensors:
    apparent_temperature:
      friendly_name: "Apparnt Temperature"
      value_template: >-
        {% set weather_temp_c = ((states('sensor.weather_temperature') | float) - 32) * 5/9 %}
        {% set es = 0.6108 * e ** (17.27 * weather_temp_c / (weather_temp_c + 237.3)) %} {# Saturation vapor pressure in kPa #}
        {% set ea = ((states('sensor.weather_humidity') | float) / 100 * es) %} {# Actual vapor pressure in kPa #}
        {% set tp = -1.3 + 0.92 * weather_temp_c + 2.2 * ea %} {# Apparent temperature in C #}
        {% set tpf = (tp * 9/5) + 32 %}
        {{ tpf | round(1) }}
- platform: template
  sensors:
    recommend_ac:
      friendly_name: "Recommend AC"
      value_template: >-
        {% if (states("sensor.apparent_temperature") | float) > 74 %}true{% else %}false{% endif %}
- platform: template
  sensors:
    recommend_ac_temp:
      friendly_name: "Recommended AC temp"
      value_template: >-
        {{ 78 - ((states("sensor.apparent_temperature") | round(0) - 72) / 2) }}
